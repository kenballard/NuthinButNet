@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Archetype.Umbraco.PropertyConverters;
@using Archetype.Umbraco.Models;
@using Archetype.Umbraco.Extensions;
@{
    Layout = "umbLayout.cshtml";
}

<h1>@Model.Content.GetPropertyValue("name")</h1>
<div>
    <img src="@Umbraco.TypedMedia(Model.Content.GetPropertyValue<int>("bannerImage")).Url" />
    
    @if (@Model.Content.GetProperty("owner") != null)
    {
        var owner = Umbraco.TypedContent(Model.Content.GetPropertyValue<int>("owner"));
        <h2>@owner.Name</h2>
        <p>@Model.Content.GetPropertyValue("ownerDescription")</p>
    }
</div>

@Umbraco.RenderMacro("BlogRoll")

@if (Model.Content.GetProperty("mediaReel") != null)
{
    <div>
        @foreach (var imageId in Model.Content.GetPropertyValue<string>("mediaReel").Split(','))
        {
            <img src="@Umbraco.TypedMedia(int.Parse(imageId)).Url" />
        }
    </div>
}

@if (Model.Content.GetProperty("resources") != null)
{
    <h2>Resources</h2>
    <ul>
        @foreach (var resource in Model.Content.GetPropertyValue<Archetype>("resources").Fieldsets)
        {
            <li>
                @* These are most likely external links *@
                @if (resource.GetValue("link").ToLower().StartsWith("http://") || resource.GetValue("link").ToLower().StartsWith("https://"))
                {
                    <a href="@resource.GetValue("link")" target="_blank">@resource.GetValue("title")</a>
                }
                else
                {
                    <a href="@resource.GetValue("link")">@resource.GetValue("title")</a>
                }
            </li>
        }

    </ul>
}
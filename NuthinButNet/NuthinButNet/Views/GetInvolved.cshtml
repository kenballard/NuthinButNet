@inherits UmbracoTemplatePage
@{
    Layout = "umbLayout.cshtml";
}
<!-- Main -->
<h2>Get Involved</h2>
@Umbraco.Field("headerBody")
<div id="catalog">
    @if (!string.IsNullOrEmpty(Request.QueryString["gift"]))
    {
        @Get("money", "$", "", true, true)
        <button class="addToCart">@Umbraco.Field("callToActionText")</button>
    }
    <div>
        @Get("time", "", " hours", true)
        @Get("talent", "", "", false)
        @Get("inKind", "", "", false)
        <button class="addToCart">@Umbraco.Field("callToActionText")</button>
    </div>
    @if (string.IsNullOrEmpty(Request.QueryString["gift"]))
    {
        @Get("money", "$", "", true, true)
        <button class="addToCart">@Umbraco.Field("callToActionText")</button>
    }
    
</div>
<div id="checkout">
    <div id="cart">
        <h3>Your Gift Includes</h3>
        <ul>
            <li><span id="moneySelected" /></li>
            <li><span id="timeSelected" /></li>
            <li><span id="talentSelected" /></li>
            <li><span id="inKindSelected" /></li>
        </ul>
    </div>
    <form>
        <label>Full Name</label><input id="Name" />
        <label>Address</label><input id="Address1" />
        <label>City</label><input id="City" />
        <label>State</label><input id="State" />
        <label>Zip Code</label><input id="Zip" />
        <label>Credit Card</label><input id="CreditCard" autocomplete="off" />
        <label>Verification Code (CVV)</label><input id="VerificationCode" />
        <label>Expiration Month</label><input id="ExpyMonth" />
        <label>Expiration Year</label><input id="ExpyYear" />
        <input type="hidden" id="moneyProduct" />
        <input type="hidden" id="timeProduct" />
        <input type="hidden" id="talentProduct" />
        <input type="hidden" id="inKindProduct" />
        <input type="submit" value="Submit" />
    </form>
</div>

<!-- /Main -->

@helper Get(string selector, string prepender, string postpender, bool isSelectOne, bool includeDesc = false)
{
    <div>
        <h3>@Umbraco.Field(selector + "Title")</h3>
        <ul>
            @for (int i = 1; i <= 5; i++)
            {
                var fieldName = string.Concat(selector, i);
                var descName = string.Concat("description", i);
                if (!string.IsNullOrEmpty(Umbraco.Field(fieldName).ToString()) && Umbraco.Field(fieldName).ToString() != "0")
                {
                    <li><label><input name="@selector" type="@(isSelectOne ? "radio" : "checkbox")" value="@Umbraco.Field(fieldName)" />@prepender @Umbraco.Field(fieldName)@postpender @(includeDesc ? Umbraco.Field(descName).ToString() : "")</label></li>
                }
            }
            <li><input name="@selector" type="@(isSelectOne ? "radio" : "checkbox")" value="-1" /><input id="timeOther" /></li>
        </ul>
    </div>
}